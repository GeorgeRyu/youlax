{
  "_args": [
    [
      {
        "raw": "react-native-image-crop-picker",
        "scope": null,
        "escapedName": "react-native-image-crop-picker",
        "name": "react-native-image-crop-picker",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/wmaeda/Documents/GitHub/youlax"
    ]
  ],
  "_from": "react-native-image-crop-picker@latest",
  "_id": "react-native-image-crop-picker@0.18.1",
  "_inCache": true,
  "_location": "/react-native-image-crop-picker",
  "_nodeVersion": "8.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-image-crop-picker-0.18.1.tgz_1508839575434_0.3405767655931413"
  },
  "_npmUser": {
    "name": "ivpusic",
    "email": "pusic007@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-image-crop-picker",
    "scope": null,
    "escapedName": "react-native-image-crop-picker",
    "name": "react-native-image-crop-picker",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-image-crop-picker/-/react-native-image-crop-picker-0.18.1.tgz",
  "_shasum": "ebdbe72def5afb6c69aa6e2ad72fd3a7de8ee408",
  "_shrinkwrap": null,
  "_spec": "react-native-image-crop-picker",
  "_where": "/Users/wmaeda/Documents/GitHub/youlax",
  "author": {
    "name": "Ivan Pusic"
  },
  "bugs": {
    "url": "https://github.com/ivpusic/react-native-image-crop-picker/issues"
  },
  "dependencies": {},
  "description": "Select single or multiple images, with cropping option",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-63Yr+Mzl/CzDze1eqMg/GGFOODgGrixSMO+28TVGCX3982f76w/op0JKoL7zuSKz/P/mVsbi9RnHA0z6Ih/RHQ==",
    "shasum": "ebdbe72def5afb6c69aa6e2ad72fd3a7de8ee408",
    "tarball": "https://registry.npmjs.org/react-native-image-crop-picker/-/react-native-image-crop-picker-0.18.1.tgz"
  },
  "gitHead": "c44ce340e0ecc957d69d631e020d979e170be09d",
  "homepage": "https://github.com/ivpusic/react-native-image-crop-picker#readme",
  "keywords": [
    "react",
    "native",
    "react-native",
    "image",
    "picker",
    "crop",
    "cropping",
    "multiple",
    "camera"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ivpusic",
      "email": "pusic007@gmail.com"
    }
  ],
  "name": "react-native-image-crop-picker",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.40.0"
  },
  "readme": "# react-native-image-crop-picker\niOS/Android image picker with support for camera, configurable compression, multiple images and cropping\n\n[![Backers on Open Collective](https://opencollective.com/react-native-image-crop-picker/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/react-native-image-crop-picker/sponsors/badge.svg)](#sponsors)\n\n## Result\n\n<p align=\"left\">\n  <img width=200 title=\"iOS Single Pick\" src=\"https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_single_pick.png\">\n<img width=200 title=\"iOS Crop\" src=\"https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_crop.png\">\n<img width=200 title=\"iOS Multiple Pick\" src=\"https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_multiple_pick.png\">\n</p>\n\n## Usage\n\nImport library\n```javascript\nimport ImagePicker from 'react-native-image-crop-picker';\n```\n\n### Select from gallery\n\nCall single image picker with cropping\n```javascript\nImagePicker.openPicker({\n  width: 300,\n  height: 400,\n  cropping: true\n}).then(image => {\n  console.log(image);\n});\n```\n\nCall multiple image picker\n```javascript\nImagePicker.openPicker({\n  multiple: true\n}).then(images => {\n  console.log(images);\n});\n```\n\nSelect video only from gallery\n```javascript\nImagePicker.openPicker({\n  mediaType: \"video\",\n}).then((video) => {\n  console.log(video);\n});\n```\n\n**Android: The prop 'cropping' has been known to cause videos not to be display in the gallery on Android. Please do not set cropping to true when selecting videos.**\n\n\n### Select from camera\n```javascript\nImagePicker.openCamera({\n  width: 300,\n  height: 400,\n  cropping: true\n}).then(image => {\n  console.log(image);\n});\n```\n\n### Crop picture\n```javascript\nImagePicker.openCropper({\n  path: 'my-file-path.jpg',\n  width: 300,\n  height: 400\n}).then(image => {\n  console.log(image);\n});\n```\n\n### Optional cleanup\nModule is creating tmp images which are going to be cleaned up automatically somewhere in the future. If you want to force cleanup, you can use `clean` to clean all tmp files, or `cleanSingle(path)` to clean single tmp file.\n\n```javascript\nImagePicker.clean().then(() => {\n  console.log('removed all tmp images from tmp directory');\n}).catch(e => {\n  alert(e);\n});\n```\n\n### Request Object\n\n| Property                                |                   Type                   | Description                              |\n| --------------------------------------- | :--------------------------------------: | :--------------------------------------- |\n| cropping                                |           bool (default false)           | Enable or disable cropping               |\n| width                                   |                  number                  | Width of result image when used with `cropping` option |\n| height                                  |                  number                  | Height of result image when used with `cropping` option |\n| multiple                                |           bool (default false)           | Enable or disable multiple image selection |\n| includeBase64                           |           bool (default false)           | Enable or disable returning base64 data with image |\n| includeExif                           |           bool (default false)           | Include image exif data in the response |\n| cropperActiveWidgetColor (android only) |       string (default `\"#424242\"`)       | When cropping image, determines ActiveWidget color. |\n| cropperStatusBarColor (android only)    |        string (default `#424242`)        | When cropping image, determines the color of StatusBar. |\n| cropperToolbarColor (android only)      |        string (default `#424242`)        | When cropping image, determines the color of Toolbar. |\n| cropperCircleOverlay                    |           bool (default false)           | Enable or disable circular cropping mask. |\n| minFiles (ios only)                     |            number (default 1)            | Min number of files to select when using `multiple` option |\n| maxFiles (ios only)                     |            number (default 5)            | Max number of files to select when using `multiple` option |\n| waitAnimationEnd (ios only)             |           bool (default true)            | Promise will resolve/reject once ViewController `completion` block is called |\n| smartAlbums (ios only)                  | array (default ['UserLibrary', 'PhotoStream', 'Panoramas', 'Videos', 'Bursts']) | List of smart albums to choose from      |\n| useFrontCamera (ios only)               |           bool (default false)           | Whether to default to the front/'selfie' camera when opened |\n| compressVideoPreset (ios only)          |      string (default MediumQuality)      | Choose which preset will be used for video compression |\n| compressImageMaxWidth                   |          number (default none)           | Compress image with maximum width        |\n| compressImageMaxHeight                  |          number (default none)           | Compress image with maximum height       |\n| compressImageQuality                    |            number (default 1)            | Compress image with quality (from 0 to 1, where 1 is best quality) |\n| loadingLabelText (ios only)             | string (default \"Processing assets...\")  | Text displayed while photo is loading in picker |\n| mediaType                               |           string (default any)           | Accepted mediaType for image selection, can be one of: 'photo', 'video', or 'any' |\n| showsSelectedCount (ios only)           |           bool (default true)            | Whether to show the number of selected assets |\n| showCropGuidelines (android only)       |           bool (default true)            | Whether to show the 3x3 grid on top of the image during cropping |\n| hideBottomControls (android only)       |           bool (default false)           | Whether to display bottom controls       |\n| enableRotationGesture (android only)    |           bool (default false)           | Whether to enable rotating the image by hand gesture |\n### Response Object\n\n| Property                  |  Type  | Description                              |\n| ------------------------- | :----: | :--------------------------------------- |\n| path                      | string | Selected image location                  |\n| localIdentifier(ios only) | string | Selected images' localidentifier, used for PHAsset searching |\n| sourceURL(ios only)       | string | Selected images' source path, do not have write access |\n| filename(ios only)        | string | Selected images' filename                |\n| width                     | number | Selected image width                     |\n| height                    | number | Selected image height                    |\n| mime                      | string | Selected image MIME type (image/jpeg, image/png) |\n| size                      | number | Selected image size in bytes             |\n| data                      | base64 | Optional base64 selected file representation |\n| exif                      | object | Extracted exif data from image. Response format is platform specific |\n\n# Install\n\n## Install package\n\n```\nnpm i react-native-image-crop-picker --save\n```\n\nLink the package using react-native link:\n\n```\nreact-native link react-native-image-crop-picker\n```\n\n## Post-install steps\n\n### iOS\n\n#### Step 1:\n\nIn Xcode open Info.plist and add string key `NSPhotoLibraryUsageDescription` with value that describes why you need access to user photos. More info here https://forums.developer.apple.com/thread/62229. Depending on what features you use, you also may need `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` keys.\n\n#### Step 2:\n\n##### Cocoapods (Highly recommended)\n\n```\ncd ios\npod init\n```\n\nAfter this you have to add pod dependencies to `Podfile`. Open `Podfile` with your editor, and add or adjust example configuration:\n\n```\nplatform :ios, '8.0'\n\ntarget '<your_project_name>' do\n    pod 'RSKImageCropper'\n    pod 'QBImagePickerController'\nend\n```\n\nAfter this run:\n\n```\npod install\n```\n\n##### Manual\n\n- Drag and drop the ios/ImageCropPickerSDK folder to your xcode project. (Make sure Copy items if needed IS ticked)\n- Click on project General tab\n  - Under `Deployment Info` set `Deployment Target` to `8.0`\n  - Under `Embedded Binaries` click `+` and add `RSKImageCropper.framework` and `QBImagePicker.framework`\n\n### Android\n\n- Make sure you are using Gradle `2.2.x` (project build.gradle)\n```gradle\nbuildscript {\n    ...\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.3'\n        ...\n    }\n    ...\n}\n```\n\n- Add `useSupportLibrary` (app build.gradle)\n```gradle\nandroid {\n    ...\n\n    defaultConfig {\n        ...\n        vectorDrawables.useSupportLibrary = true\n        ...\n    }\n    ...\n}\n```\n\n- [Optional] If you want to use camera picker in your project, add following to `AndroidManifest.xml`\n  - `<uses-permission android:name=\"android.permission.CAMERA\"/>`\n\n## Production build\n\n### iOS\n\n#### Cocoapods (Highly recommended)\n\n- You are already done\n\n#### Manual\n\nIf you are using pre-built frameworks from `ios/ImageCropPickerSDK`, then before deploying app to production you should strip off simulator ARCHs from these, or you can add frameworks from `Libraries/imageCropPicker/Libraries/_framework_name_.xcodeproj/Products/_framework_name_.framework` to Embedded Binaries instead of pre-built ones.\nRelated issue: https://github.com/ivpusic/react-native-image-crop-picker/issues/61.\n\nDetails for second approach:\n\n1. Remove the pre-built frameworks from `Embedded Binaries`\n2. Build for Device\n3. Add the newly built binaries for both frameworks to `Embedded Binaries` (located at `Libraries/imageCropPicker/Libraries/_framework_name_.xcodeproj/Products/_framework_name_.framework`)\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute]](CONTRIBUTING.md).\n<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/react-native-image-crop-picker/contributors.svg?width=890\" /></a>\n\n\n## Backers\n\nThank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/react-native-image-crop-picker#backer)]\n\n<a href=\"https://opencollective.com/react-native-image-crop-picker#backers\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/react-native-image-crop-picker#sponsor)]\n\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-native-image-crop-picker/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-native-image-crop-picker/sponsor/9/avatar.svg\"></a>\n\n\n\n## License\n*MIT*\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ivpusic/react-native-image-crop-picker.git"
  },
  "scripts": {
    "prepublish": "rm -rf android/build",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.18.1"
}
